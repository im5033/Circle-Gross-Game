#include <iostream>
using namespace std;

struct Node {
	int move;
	char board[9];
	char player;
	struct Node* nextPtr;
};

void update(char board[]) {
	cout << " ___   ___   ___" << endl;
	cout << "| " << board[0] << " | | " << board[1] << " | | " << board[2] << " |" << endl;
	cout << "|___| |___| |___|" << endl;
	cout << " ___   ___   ___" << endl;
	cout << "| " << board[3] << " | | " << board[4] << " | | " << board[5] << " |" << endl;
	cout << "|___| |___| |___|" << endl;
	cout << " ___   ___   ___" << endl;
	cout << "| " << board[6] << " | | " << board[7] << " | | " << board[8] << " |" << endl;
	cout << "|___| |___| |___|" << endl;
}

void check(char board[], char player) {
	for (int i = 0; i < 7; i = i + 3) {
		if (board[i] == board[i + 1] && board[i] == board[i + 2] && board[i] == player) {
			cout << "Player " << player << "win ! ";
			exit(0);
		}
	}
	for (int i = 0; i < 3; i++) {
		if (board[i] == board[i + 3] && board[i + 3] == board[i + 6] && board[i] == player) {
			cout << "Player " << player << " win ! " << endl;
			exit(0);
		}
	}
	if (board[0] == board[4] && board[4] == board[8] && board[0] == player) {
		cout << "Player " << player << " win ! " << endl;
		exit(0);
	}
	if (board[2] == board[4] && board[4] == board[6] && board[2] == player) {
		cout << "Player " << player << " win ! " << endl;
		exit(0);
	}
}

void nodePrint(Node* current,Node* head) {
	system("cls");
	current = head;
	while (current != NULL) {
		update(current->board);
		cout << "Player " << current->player << " move : " << current->move << endl;
		current = current->nextPtr;
	}
}

int main()
{
	int turn = 0;
	int move;
	char player = 'X';
	char board[9];
	for (int i = 0; i < 9; i++) {
		board[i] = ' ';
	}
	Node* head = new Node();
	Node* current = new Node();
	while (1) {
		cout << "Turn to " << player << " ,make your move : ";
		cin >> move;
		if (board[move - 1] != ' ') {
			cout << "This sit cannot put char.please redo." << endl;
		}
		else {
			board[move - 1] = player;
			turn = turn + 1;
		}
		if (turn == 1) {
			head->move = move;
			for (int i = 0; i < 9; i++) {
				head->board[i] = board[i];
			}
			head->player = player;
			head->nextPtr = NULL;
			nodePrint(head,head);
			current = head;
		}
		else {
			current->nextPtr = new Node();
			current = current->nextPtr;
			current->move = move;
			for (int i = 0; i < 9; i++) {
				current->board[i] = board[i];
			}
			current->player = player;
			current->nextPtr = NULL;
			nodePrint(current, head);
		}
		check(board, player);
		if (turn % 2 == 1) player = 'O';
		if (turn % 2 == 0) player = 'X';
	}
}
